  - hosts: localhost
    connection: local 
    become: true
    become_user: root
    tasks:
      - name: Docker official GPG key
        shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg -v --dearmor --yes -o /usr/share/keyrings/docker-archive-keyring.gpg"
      - name: Docker stable repo
        shell: | 
          echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      - name: apt-get update
        apt:
          update_cache: yes
          cache_valid_time: 3600
      - name: install packages
        apt:
          name:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
          - jq
          - ca-certificates
          - apt-transport-https
          - kubelet 
          - kubeadm 
          - kubectx
          - kubens
          #- kubectl
          - nmap
          - net-tools
          - nfs-common
          - bridge-utils
          - apt-transport-https
          - gnupg2
          - lsb-release
          state: present
          update_cache: true

      - name: Install kubectl
        shell: | 
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl\
      - name: Install minikube
        shell: | 
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          rm minikube-linux-amd64
      - name: Install helm
        shell: | 
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          rm get_helm.sh
      - name: Install kops
        shell: | 
          curl -Lo kops https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
          chmod +x kops
          sudo mv kops /usr/local/bin/kops
      - name: Install krew
        shell: |
          set -x; cd "$(mktemp -d)" &&
          OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
          ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
          KREW="krew-${OS}_${ARCH}" &&
          curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
          tar zxvf "${KREW}.tar.gz" &&
          ./"${KREW}" install krew
          #export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
          kubectl krew
      - name: Install krew plugins
        shell: |
          kubectl krew install tail access-matrix cert-manager deprecations flyte gadget ingress-nginx karmada kubescape neat score tail tree resource-capacity rook-ceph
      - name: Install skaffold
        shell: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
      - name: Install istioctl
        shell: |
          curl -L https://istio.io/downloadIstio | sh -
      - name: Install linkerd 
        shell: |
          curl --proto '=https' --tlsv1.2 -sSfL https://run.linkerd.io/install | sh
      - name: Install  Open Policy Agent 
        shell: |
          curl -L -o opa https://openpolicyagent.org/downloads/v0.55.0/opa_linux_amd64_static
          chmod 755 ./opa
          sudo mv opa /usr/local/bin/opa
      - name: Install arkade 
        shell: |
          curl -sLS https://get.arkade.dev | sudo sh
      - community.general.snap:
          name:
            - microk8s 
          classic: true
      - name: autoclean
        apt:
          autoclean: yes
      - name: groupadd
        group:
          name: docker
          state: present
      - name: add user to group
        user: 
          name: arekbee
          group: docker 
          append: yes
      
